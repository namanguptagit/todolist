{"version":3,"sources":["component/todolist/todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputdata","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","currElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","class","item_todo_edited","find","editItem","updatedItem","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAqGeA,EAzFF,WACT,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAXT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EACQG,KAAKC,MAAMJ,GAGX,GAKwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KACMC,EAAU,WACZ,GAAId,EAGC,GAAGA,GAAaY,EACnBH,EACID,EAAMO,KAAI,SAACC,GACV,OAAGA,EAASC,KAAOP,EACR,2BAAIM,GAAX,IAAqBE,KAAOlB,IAEzBgB,MAGZf,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEV,CACA,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEbS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SArBdsB,MAAM,sBA8Cd,OAHAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAapB,KAAKqB,UAAUlB,MAClD,CAACA,IAEA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,4EAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAa,kBAAaJ,UAAU,eAAeK,MAAOhC,EAAWiC,SAAU,SAACC,GAAD,OAASjC,EAAaiC,EAAMC,OAAOH,UACpIpB,EAAgB,mBAAGe,UAAU,sBAAsBS,QAAStB,IAAkB,mBAAGa,UAAU,qBAAqBS,QAAStB,OAG9H,qBAAKa,UAAU,YAAf,SACKnB,EAAMO,KAAI,SAACC,EAASqB,GACjB,OACA,sBAAKV,UAAU,WAAf,UACA,6BAAKX,EAASE,OACd,sBAAKS,UAAU,WAAf,UACA,mBAAGW,MAAM,uBAAuBF,QAAS,kBA9BlD,SAACC,GACd,IAAME,EAAmB/B,EAAMgC,MAAK,SAACxB,GACjC,OAAOA,EAASC,KAAOoB,KAE3BpC,EAAcsC,EAAiBrB,MAC/BP,EAAc0B,GACdxB,GAAgB,GAwBmD4B,CAASzB,EAASC,OAC/D,mBAAGqB,MAAM,4BAA2BF,QAAS,kBAxCpD,SAACC,GACd,IAAMK,EAAclC,EAAMmC,QAAO,SAAC3B,GAC9B,OAAOA,EAASC,KAAMoB,KAE1B5B,EAASiC,GAoC4DE,CAAW5B,EAASC,YAJtCD,EAASC,SAahD,qBAAKU,UAAU,YAAf,SAA2B,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QA3C3F,WACZ3B,EAAS,KA0C8B,SAAoF,0DCnFpHoC,EATH,WACV,OACA,mCACA,cAAC,EAAD,OCAFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d70ac61.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\nimport { useState ,useEffect} from 'react'\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n    if(lists){\r\n        return JSON.parse(lists);\r\n    }\r\n    else{\r\n        return [];\r\n    }\r\n};\r\nconst Todo = () => {\r\n    const [inputdata , setInputdata] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n    const addItem = () =>{\r\n        if(!inputdata){\r\n            alert('plz fill the data')\r\n        }\r\n        else if(inputdata && toggleButton){\r\n          setItems(\r\n              items.map((currElem) => {\r\n               if(currElem.id === isEditItem){\r\n                   return {...currElem, name : inputdata }\r\n               }\r\n               return currElem;\r\n              })\r\n          )   \r\n          setInputdata(\"\");\r\n          setIsEditItem(null);\r\n          setToggleButton(false); \r\n        }\r\n            else{\r\n                const myNewInputData = {\r\n                    id: new Date().getTime().toString(),\r\n                    name: inputdata\r\n                }\r\n             setItems([...items, myNewInputData]);\r\n             setInputdata(\"\");\r\n            }\r\n       \r\n    };\r\n\r\n    const deleteItem=(index) => {\r\n        const updatedItem = items.filter((currElem)=>{\r\n            return currElem.id !==index;\r\n        })\r\n        setItems(updatedItem)\r\n    }\r\n    const removeAll=()=>{\r\n        setItems([]);\r\n    }\r\n    const editItem=(index)=>{\r\n      const item_todo_edited = items.find((currElem) =>{\r\n          return currElem.id === index;\r\n      });\r\n      setInputdata( item_todo_edited.name);\r\n      setIsEditItem(index);\r\n      setToggleButton(true);\r\n    };\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mytodolist\",JSON.stringify(items))\r\n    }, [items]);\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here üëç</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder= \"‚úç Add Item\" className=\"form-control\" value={inputdata} onChange={(event)=>setInputdata(event.target.value)}/>\r\n                        {toggleButton ? (<i className=\"far fa-edit add-btn\" onClick={addItem}></i>) : (<i className=\"fa fa-plus add-btn\" onClick={addItem}></i>)}\r\n\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {items.map((currElem,index)=>{\r\n                            return(\r\n                            <div className=\"eachItem\" key={currElem.id}>\r\n                            <h3>{currElem.name}</h3>\r\n                            <div className=\"todo-btn\">\r\n                            <i class=\"far fa-edit add-btn \" onClick={()=>editItem(currElem.id)}></i>\r\n                            <i class=\"far fa-trash-alt add-btn \"onClick={()=>deleteItem(currElem.id)}></i>\r\n                            </div>\r\n                            </div>\r\n                            )\r\n                        })\r\n                        }\r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"showItems\"><button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span>CHECK LIST</span></button></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react';\nimport Todo from './component/todolist/todo';\nconst App = () => {\n  return (\n  <>\n  <Todo/>\n  </>\n  );\n\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}